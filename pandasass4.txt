#1
import pandas as pd
import numpy as np
#2
pd.__version__
#3
pd.show_versions()
#4
data = {'animal': ['cat', 'cat', 'snake', 'dog', 'dog', 'cat', 'snake', 'cat', 'dog', 'dog'],
        'age': [2.5, 3, 0.5, np.nan, 5, 2, 4.5, np.nan, 7, 3],
        'visits': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'priority': ['yes', 'yes', 'no', 'yes', 'no', 'no', 'no', 'yes', 'no', 'no']}

labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
df = pd.DataFrame(data, index=labels)
#5
df.info()
df.describe()
#6
df.head(3)
#7
df[['animal', 'age']]
#8
df.loc[df.index[[3, 4, 8]], ['animal', 'age']]
#9
df[df['visits'] > 3]
#10
df[df['age'].isnull()]
#11
df[(df['animal'] == 'cat') & (df['age'] < 3)]
#12
df[df['age'].between(2, 4)]
#13
df.loc['f', 'age'] = 1.5
#14
df['visits'].sum()
#12
res_df = df.loc[(df['age']>2) & (df['age']<4)]
print(res_df)
#15
df.groupby('animal')['age'].mean()
#16
df.loc['k'] = [5.5, 'dog', 'no', 2]
df = df.drop('k')
#17
df.groupby('animal').size()
#18
df['age'].value_counts(ascending=False)
df['visits'].value_counts(ascending=True)
#19
df1=df.replace('yes','True')
df1=df1.replace('no','False')
df1
#20
df2=df1['animal']
df2=df2.replace('snake','python')
df2
#21
newdf=df.pivot_table(index=['animal','visits'],values=['age'],aggfunc='mean')
newdf
#22
import pandas as pd
df = pd.DataFrame({'A': [1, 2, 2, 3, 4, 5, 5, 5, 6, 7, 7]})
dup = [True]

total_len = len(df.index)
for i in range(1, total_len):
    if df.iloc[i]['A'] == df.iloc[i-1]['A']:
        dup.append(False)
    else:
        dup.append(True)
        
print(df[dup])
#23
df = pd.DataFrame(np.random.random(size=(5, 3))) 
a=df.mean()
ndf=df-a
ndf
#24
df = pd.DataFrame(np.random.random(size=(5, 10)), columns=list('abcdefghij'))
a=df.agg(['sum','min'])  
a
#25
df = pd.DataFrame({'A': [1, 2, 2, 3, 4, 5, 5, 5, 6, 7, 7]})
df['A'].nunique() #df['column_name'].nunique()
#26
(df.isnull().cumsum(axis=1) == 3).idxmax(axis=1)
import pandas as pd
df = pd.DataFrame({'grps': list('aaabbcaabcccbbc'), 
                   'vals': [12,345,3,1,45,14,4,52,54,23,235,21,57,3,87]})
df.groupby('grps')['vals'].nlargest(3).sum(level=0)
#29
import numpy as np
df = pd.DataFrame({'X': [7, 2, 0, 3, 4, 2, 5, 0, 3, 4]})
x = (df['X'] != 0).cumsum()
y = x != x.shift()
df['Y'] = y.groupby((y != y.shift()).cumsum()).cumsum()
df['Y']
#30
df.unstack().sort_values()[-3:].index.tolist()
#32
df = pd.DataFrame({'group': list('aabbabbbabab'),
                       'value': [1, 2, 3, np.nan, 2, 3, 
                                 np.nan, 1, 7, 3, np.nan, 8]})
df
#33
dti = pd.date_range(start='2015-01-01', end='2015-12-31', freq='B') 
s = pd.Series(np.random.rand(len(dti)), index=dti)
#34
s[s.index.weekday == 2].sum() 
#35
s.resample('M').mean()
#36
s.groupby(pd.TimeGrouper('4M')).idxmax()
#38
df = pd.DataFrame({'From_To': ['LoNDon_paris', 'MAdrid_miLAN', 'londON_StockhOlm', 
                               'Budapest_PaRis', 'Brussels_londOn'],
              'FlightNumber': [10045, np.nan, 10065, np.nan, 10085],
              'RecentDelays': [[23, 47], [], [24, 43, 87], [13], [67, 32]],
                   'Airline': ['KLM(!)', '<Air France> (12)', '(British Airways. )', 
                               '12. Air France', '"Swiss Air"']}
                               
df['FlightNumber'] = df['FlightNumber'].interpolate().astype(int)
#39
temp = df.From_To.str.split('_', expand=True)
temp.columns = ['From', 'To']
temp.columns
#40
temp['From'] = temp['From'].str.capitalize()
temp['To'] = temp['To'].str.capitalize()
#41
df = df.drop('From_To', axis=1)
df = df.join(temp)
df
#43
df['Airline'] = df['Airline'].str.extract('([a-zA-Z\s]+)', expand=False).str.strip()
#44
letters = ['A', 'B', 'C']
numbers = list(range(10))

mi = pd.MultiIndex.from_product([letters, numbers])
s = pd.Series(np.random.rand(30), index=mi)
#46
s.loc[:, [1, 3, 6]]
#47
s.loc[pd.IndexSlice[:'B', 5:]]
#48
s.sum(level=0)
df = pd.DataFrame({"xs":[1,5,2,8,1], "ys":[4,2,1,9,6]})
import matplotlib.pyplot as plt
%matplotlib inline
plt.style.use('ggplot')

df = pd.DataFrame({"xs":[1,5,2,8,1], "ys":[4,2,1,9,6]})

df.plot.scatter("xs", "ys", color = "black", marker = "x")
#57
df = pd.DataFrame({"productivity":[5,2,3,1,4,5,6,7,8,3,4,8,9],
                   "hours_in"    :[1,9,6,5,3,9,2,9,1,7,4,2,2],
                   "happiness"   :[2,1,3,2,3,1,2,3,1,2,2,1,3],
                   "caffienated" :[0,0,1,1,0,0,0,0,1,1,0,1,0]})

df.plot.scatter("hours_in", "productivity", s = df.happiness * 30, c = df.caffienated)